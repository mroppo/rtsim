/*
 * tcldomxmlDecls.h --
 *
 *	Declarations of functions in the platform independent public TCLDOMXML API.
 *
 */

#ifndef _TCLDOMXMLDECLS
#define _TCLDOMXMLDECLS

/*
 * WARNING: The contents of this file is automatically generated by the
 * genStubs.tcl script. Any modifications to the function declarations
 * below should be made in the tcldomxml.decls script.
 */

/* !BEGIN!: Do not edit below this line. */

/*
 * Exported function declarations:
 */

/* 0 */
EXTERN int		Tcldom_libxml2_Init _ANSI_ARGS_((Tcl_Interp * interp));
/* Slot 1 is reserved */
/* Slot 2 is reserved */
/* Slot 3 is reserved */
/* Slot 4 is reserved */
/* Slot 5 is reserved */
/* Slot 6 is reserved */
/* 7 */
EXTERN Tcl_Obj *	TclDOM_libxml2_CreateObjFromNode _ANSI_ARGS_((
				Tcl_Interp * interp, xmlNodePtr nodePtr));
/* 8 */
EXTERN int		TclDOM_libxml2_GetNodeFromObj _ANSI_ARGS_((
				Tcl_Interp * interp, Tcl_Obj * objPtr, 
				xmlNodePtr * nodePtrPtr));
/* 9 */
EXTERN int		TclDOM_libxml2_GetTclNodeFromObj _ANSI_ARGS_((
				Tcl_Interp * interp, Tcl_Obj * objPtr, 
				TclDOM_libxml2_Node ** tNodePtrPtr));
/* 10 */
EXTERN Tcl_Obj *	TclDOM_libxml2_NewEventObj _ANSI_ARGS_((
				Tcl_Interp * interp, xmlDocPtr doc, 
				enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr));
/* 11 */
EXTERN int		TclDOM_libxml2_GetEventFromObj _ANSI_ARGS_((
				Tcl_Interp * interp, Tcl_Obj * objPtr, 
				TclDOM_libxml2_Event ** eventPtrPtr));
/* 12 */
EXTERN int		TclDOM_libxml2_GetTclEventFromObj _ANSI_ARGS_((
				Tcl_Interp * interp, Tcl_Obj * objPtr, 
				TclDOM_libxml2_Node ** nodePtrPtr));
/* 13 */
EXTERN void		TclDOM_libxml2_DestroyNode _ANSI_ARGS_((
				Tcl_Interp * interp, 
				TclDOM_libxml2_Node * tNodePtr));
/* 14 */
EXTERN void		TclDOM_libxml2_InvalidateNode _ANSI_ARGS_((
				TclDOM_libxml2_Node * tNodePtr));
/* 15 */
EXTERN Tcl_Obj *	TclDOM_libxml2_CreateObjFromDoc _ANSI_ARGS_((
				Tcl_Interp * interp, xmlDocPtr docPtr));
/* Slot 16 is reserved */
/* Slot 17 is reserved */
/* Slot 18 is reserved */
/* Slot 19 is reserved */
/* 20 */
EXTERN void		TclDOM_InitEvent _ANSI_ARGS_((
				TclDOM_libxml2_Event * eventPtr, 
				enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, 
				Tcl_Obj * cancelablePtr));
/* 21 */
EXTERN void		TclDOM_InitUIEvent _ANSI_ARGS_((
				TclDOM_libxml2_Event * eventPtr, 
				enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, 
				Tcl_Obj * cancelablePtr, Tcl_Obj * viewPtr, 
				Tcl_Obj * detailPtr));
/* 22 */
EXTERN void		TclDOM_InitMouseEvent _ANSI_ARGS_((
				TclDOM_libxml2_Event * eventPtr, 
				enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, 
				Tcl_Obj * cancelablePtr, Tcl_Obj * viewPtr, 
				Tcl_Obj * detailPtr, Tcl_Obj * screenXPtr, 
				Tcl_Obj * screenYPtr, Tcl_Obj * clientXPtr, 
				Tcl_Obj * clientYPtr, Tcl_Obj * ctrlKeyPtr, 
				Tcl_Obj * altKeyPtr, Tcl_Obj * shiftKeyPtr, 
				Tcl_Obj * metaKeyPtr, Tcl_Obj * buttonPtr, 
				Tcl_Obj * relatedNodePtr));
/* 23 */
EXTERN void		TclDOM_InitMutationEvent _ANSI_ARGS_((
				TclDOM_libxml2_Event * eventPtr, 
				enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, 
				Tcl_Obj * cancelablePtr, 
				Tcl_Obj * relatedNodePtr, 
				Tcl_Obj * prevValuePtr, 
				Tcl_Obj * newValuePtr, Tcl_Obj * attrNamePtr, 
				Tcl_Obj * attrChangePtr));
/* 24 */
EXTERN int		TclDOM_PostUIEvent _ANSI_ARGS_((Tcl_Interp * interp, 
				TclXML_libxml2_Document * tDocPtr, 
				Tcl_Obj * nodeObjPtr, 
				enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, 
				Tcl_Obj * cancelablePtr, Tcl_Obj * viewPtr, 
				Tcl_Obj * detailPtr));
/* 25 */
EXTERN int		TclDOM_PostMouseEvent _ANSI_ARGS_((
				Tcl_Interp * interp, 
				TclXML_libxml2_Document * tDocPtr, 
				Tcl_Obj * nodeObjPtr, 
				enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, 
				Tcl_Obj * cancelablePtr, Tcl_Obj * viewPtr, 
				Tcl_Obj * detailPtr, Tcl_Obj * screenXPtr, 
				Tcl_Obj * screenYPtr, Tcl_Obj * clientXPtr, 
				Tcl_Obj * clientYPtr, Tcl_Obj * ctrlKeyPtr, 
				Tcl_Obj * altKeyPtr, Tcl_Obj * shiftKeyPtr, 
				Tcl_Obj * metaKeyPtr, Tcl_Obj * buttonPtr, 
				Tcl_Obj * relatedNodePtr));
/* 26 */
EXTERN int		TclDOM_PostMutationEvent _ANSI_ARGS_((
				Tcl_Interp * interp, 
				TclXML_libxml2_Document * tDocPtr, 
				Tcl_Obj * nodeObjPtr, 
				enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, 
				Tcl_Obj * cancelablePtr, 
				Tcl_Obj * relatedNodePtr, 
				Tcl_Obj * prevValuePtr, 
				Tcl_Obj * newValuePtr, Tcl_Obj * attrNamePtr, 
				Tcl_Obj * attrChangePtr));
/* 27 */
EXTERN int		TclDOM_AddEventListener _ANSI_ARGS_((
				Tcl_Interp * interp, 
				TclXML_libxml2_Document * tDocPtr, 
				void * tokenPtr, enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * listenerPtr, 
				int capturing));
/* 28 */
EXTERN int		TclDOM_RemoveEventListener _ANSI_ARGS_((
				Tcl_Interp * interp, 
				TclXML_libxml2_Document * tDocPtr, 
				void * tokenPtr, enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, Tcl_Obj * listenerPtr, 
				int capturing));
/* 29 */
EXTERN int		TclDOM_DispatchEvent _ANSI_ARGS_((
				Tcl_Interp * interp, Tcl_Obj * nodePtr, 
				Tcl_Obj * eventObjPtr, 
				TclDOM_libxml2_Event * eventPtr));
/* 30 */
EXTERN Tcl_Obj *	TclDOM_GetEventListener _ANSI_ARGS_((
				Tcl_Interp * interp, 
				TclXML_libxml2_Document * tDocPtr, 
				void * tokenPtr, enum TclDOM_EventTypes type, 
				Tcl_Obj * typeObjPtr, int capturing));

typedef struct Tcldom_libxml2Stubs {
    int magic;
    struct Tcldom_libxml2StubHooks *hooks;

    int (*tcldom_libxml2_Init) _ANSI_ARGS_((Tcl_Interp * interp)); /* 0 */
    void *reserved1;
    void *reserved2;
    void *reserved3;
    void *reserved4;
    void *reserved5;
    void *reserved6;
    Tcl_Obj * (*tclDOM_libxml2_CreateObjFromNode) _ANSI_ARGS_((Tcl_Interp * interp, xmlNodePtr nodePtr)); /* 7 */
    int (*tclDOM_libxml2_GetNodeFromObj) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * objPtr, xmlNodePtr * nodePtrPtr)); /* 8 */
    int (*tclDOM_libxml2_GetTclNodeFromObj) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * objPtr, TclDOM_libxml2_Node ** tNodePtrPtr)); /* 9 */
    Tcl_Obj * (*tclDOM_libxml2_NewEventObj) _ANSI_ARGS_((Tcl_Interp * interp, xmlDocPtr doc, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr)); /* 10 */
    int (*tclDOM_libxml2_GetEventFromObj) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * objPtr, TclDOM_libxml2_Event ** eventPtrPtr)); /* 11 */
    int (*tclDOM_libxml2_GetTclEventFromObj) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * objPtr, TclDOM_libxml2_Node ** nodePtrPtr)); /* 12 */
    void (*tclDOM_libxml2_DestroyNode) _ANSI_ARGS_((Tcl_Interp * interp, TclDOM_libxml2_Node * tNodePtr)); /* 13 */
    void (*tclDOM_libxml2_InvalidateNode) _ANSI_ARGS_((TclDOM_libxml2_Node * tNodePtr)); /* 14 */
    Tcl_Obj * (*tclDOM_libxml2_CreateObjFromDoc) _ANSI_ARGS_((Tcl_Interp * interp, xmlDocPtr docPtr)); /* 15 */
    void *reserved16;
    void *reserved17;
    void *reserved18;
    void *reserved19;
    void (*tclDOM_InitEvent) _ANSI_ARGS_((TclDOM_libxml2_Event * eventPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, Tcl_Obj * cancelablePtr)); /* 20 */
    void (*tclDOM_InitUIEvent) _ANSI_ARGS_((TclDOM_libxml2_Event * eventPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, Tcl_Obj * cancelablePtr, Tcl_Obj * viewPtr, Tcl_Obj * detailPtr)); /* 21 */
    void (*tclDOM_InitMouseEvent) _ANSI_ARGS_((TclDOM_libxml2_Event * eventPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, Tcl_Obj * cancelablePtr, Tcl_Obj * viewPtr, Tcl_Obj * detailPtr, Tcl_Obj * screenXPtr, Tcl_Obj * screenYPtr, Tcl_Obj * clientXPtr, Tcl_Obj * clientYPtr, Tcl_Obj * ctrlKeyPtr, Tcl_Obj * altKeyPtr, Tcl_Obj * shiftKeyPtr, Tcl_Obj * metaKeyPtr, Tcl_Obj * buttonPtr, Tcl_Obj * relatedNodePtr)); /* 22 */
    void (*tclDOM_InitMutationEvent) _ANSI_ARGS_((TclDOM_libxml2_Event * eventPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, Tcl_Obj * cancelablePtr, Tcl_Obj * relatedNodePtr, Tcl_Obj * prevValuePtr, Tcl_Obj * newValuePtr, Tcl_Obj * attrNamePtr, Tcl_Obj * attrChangePtr)); /* 23 */
    int (*tclDOM_PostUIEvent) _ANSI_ARGS_((Tcl_Interp * interp, TclXML_libxml2_Document * tDocPtr, Tcl_Obj * nodeObjPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, Tcl_Obj * cancelablePtr, Tcl_Obj * viewPtr, Tcl_Obj * detailPtr)); /* 24 */
    int (*tclDOM_PostMouseEvent) _ANSI_ARGS_((Tcl_Interp * interp, TclXML_libxml2_Document * tDocPtr, Tcl_Obj * nodeObjPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, Tcl_Obj * cancelablePtr, Tcl_Obj * viewPtr, Tcl_Obj * detailPtr, Tcl_Obj * screenXPtr, Tcl_Obj * screenYPtr, Tcl_Obj * clientXPtr, Tcl_Obj * clientYPtr, Tcl_Obj * ctrlKeyPtr, Tcl_Obj * altKeyPtr, Tcl_Obj * shiftKeyPtr, Tcl_Obj * metaKeyPtr, Tcl_Obj * buttonPtr, Tcl_Obj * relatedNodePtr)); /* 25 */
    int (*tclDOM_PostMutationEvent) _ANSI_ARGS_((Tcl_Interp * interp, TclXML_libxml2_Document * tDocPtr, Tcl_Obj * nodeObjPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * bubblesPtr, Tcl_Obj * cancelablePtr, Tcl_Obj * relatedNodePtr, Tcl_Obj * prevValuePtr, Tcl_Obj * newValuePtr, Tcl_Obj * attrNamePtr, Tcl_Obj * attrChangePtr)); /* 26 */
    int (*tclDOM_AddEventListener) _ANSI_ARGS_((Tcl_Interp * interp, TclXML_libxml2_Document * tDocPtr, void * tokenPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * listenerPtr, int capturing)); /* 27 */
    int (*tclDOM_RemoveEventListener) _ANSI_ARGS_((Tcl_Interp * interp, TclXML_libxml2_Document * tDocPtr, void * tokenPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, Tcl_Obj * listenerPtr, int capturing)); /* 28 */
    int (*tclDOM_DispatchEvent) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * nodePtr, Tcl_Obj * eventObjPtr, TclDOM_libxml2_Event * eventPtr)); /* 29 */
    Tcl_Obj * (*tclDOM_GetEventListener) _ANSI_ARGS_((Tcl_Interp * interp, TclXML_libxml2_Document * tDocPtr, void * tokenPtr, enum TclDOM_EventTypes type, Tcl_Obj * typeObjPtr, int capturing)); /* 30 */
} Tcldom_libxml2Stubs;

#ifdef __cplusplus
extern "C" {
#endif
extern Tcldom_libxml2Stubs *tcldom_libxml2StubsPtr;
#ifdef __cplusplus
}
#endif

#if defined(USE_TCLDOM_LIBXML2_STUBS) && !defined(USE_TCLDOM_LIBXML2_STUB_PROCS)

/*
 * Inline function declarations:
 */

#ifndef Tcldom_libxml2_Init
#define Tcldom_libxml2_Init \
	(tcldom_libxml2StubsPtr->tcldom_libxml2_Init) /* 0 */
#endif
/* Slot 1 is reserved */
/* Slot 2 is reserved */
/* Slot 3 is reserved */
/* Slot 4 is reserved */
/* Slot 5 is reserved */
/* Slot 6 is reserved */
#ifndef TclDOM_libxml2_CreateObjFromNode
#define TclDOM_libxml2_CreateObjFromNode \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_CreateObjFromNode) /* 7 */
#endif
#ifndef TclDOM_libxml2_GetNodeFromObj
#define TclDOM_libxml2_GetNodeFromObj \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_GetNodeFromObj) /* 8 */
#endif
#ifndef TclDOM_libxml2_GetTclNodeFromObj
#define TclDOM_libxml2_GetTclNodeFromObj \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_GetTclNodeFromObj) /* 9 */
#endif
#ifndef TclDOM_libxml2_NewEventObj
#define TclDOM_libxml2_NewEventObj \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_NewEventObj) /* 10 */
#endif
#ifndef TclDOM_libxml2_GetEventFromObj
#define TclDOM_libxml2_GetEventFromObj \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_GetEventFromObj) /* 11 */
#endif
#ifndef TclDOM_libxml2_GetTclEventFromObj
#define TclDOM_libxml2_GetTclEventFromObj \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_GetTclEventFromObj) /* 12 */
#endif
#ifndef TclDOM_libxml2_DestroyNode
#define TclDOM_libxml2_DestroyNode \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_DestroyNode) /* 13 */
#endif
#ifndef TclDOM_libxml2_InvalidateNode
#define TclDOM_libxml2_InvalidateNode \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_InvalidateNode) /* 14 */
#endif
#ifndef TclDOM_libxml2_CreateObjFromDoc
#define TclDOM_libxml2_CreateObjFromDoc \
	(tcldom_libxml2StubsPtr->tclDOM_libxml2_CreateObjFromDoc) /* 15 */
#endif
/* Slot 16 is reserved */
/* Slot 17 is reserved */
/* Slot 18 is reserved */
/* Slot 19 is reserved */
#ifndef TclDOM_InitEvent
#define TclDOM_InitEvent \
	(tcldom_libxml2StubsPtr->tclDOM_InitEvent) /* 20 */
#endif
#ifndef TclDOM_InitUIEvent
#define TclDOM_InitUIEvent \
	(tcldom_libxml2StubsPtr->tclDOM_InitUIEvent) /* 21 */
#endif
#ifndef TclDOM_InitMouseEvent
#define TclDOM_InitMouseEvent \
	(tcldom_libxml2StubsPtr->tclDOM_InitMouseEvent) /* 22 */
#endif
#ifndef TclDOM_InitMutationEvent
#define TclDOM_InitMutationEvent \
	(tcldom_libxml2StubsPtr->tclDOM_InitMutationEvent) /* 23 */
#endif
#ifndef TclDOM_PostUIEvent
#define TclDOM_PostUIEvent \
	(tcldom_libxml2StubsPtr->tclDOM_PostUIEvent) /* 24 */
#endif
#ifndef TclDOM_PostMouseEvent
#define TclDOM_PostMouseEvent \
	(tcldom_libxml2StubsPtr->tclDOM_PostMouseEvent) /* 25 */
#endif
#ifndef TclDOM_PostMutationEvent
#define TclDOM_PostMutationEvent \
	(tcldom_libxml2StubsPtr->tclDOM_PostMutationEvent) /* 26 */
#endif
#ifndef TclDOM_AddEventListener
#define TclDOM_AddEventListener \
	(tcldom_libxml2StubsPtr->tclDOM_AddEventListener) /* 27 */
#endif
#ifndef TclDOM_RemoveEventListener
#define TclDOM_RemoveEventListener \
	(tcldom_libxml2StubsPtr->tclDOM_RemoveEventListener) /* 28 */
#endif
#ifndef TclDOM_DispatchEvent
#define TclDOM_DispatchEvent \
	(tcldom_libxml2StubsPtr->tclDOM_DispatchEvent) /* 29 */
#endif
#ifndef TclDOM_GetEventListener
#define TclDOM_GetEventListener \
	(tcldom_libxml2StubsPtr->tclDOM_GetEventListener) /* 30 */
#endif

#endif /* defined(USE_TCLDOM_LIBXML2_STUBS) && !defined(USE_TCLDOM_LIBXML2_STUB_PROCS) */

/* !END!: Do not edit above this line. */

#endif /* _TCLXMLDECLS */

